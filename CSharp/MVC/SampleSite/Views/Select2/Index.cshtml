@{
    ViewBag.Title = "Select2 Sample";
}

@section styles {
    #select2Main {
        display: none;
    }
}

<div id="loader">
</div>

<h2>Select2 Sample</h2>
<span style=""><a href="https://select2.org/">More informantion about Select2</a></span>

<div id="loader2">
    <h2>Loading...</h2>
</div>


<div id="select2Main">
    <div class="row">
        <div class="col-md-6">
            <h3>Your certificates</h3>
            <select id="certificateSelect" class="js-example-basic-single" style="width: 100%" name="certificate"></select>
            <br />
            <br />
            <button id="readCertButton" class="btn btn-info" type="button">Show Certificate Information</button>
        </div>
        <div class="col-md-6" id="certInfoPanel">
            <h3>Certificate Information</h3>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-8">
            <div id="logPanel">
            </div>
        </div>
    </div>
</div>

@section scripts {

    @*// Select2   https://select2.org/*@
    <link href="~/Content/css/select2.css" rel="stylesheet" />
    <script src="~/Content/js/select2.full.js"></script>

    @*
        The file below contains the JS lib for accessing the Web PKI component. For more information, see:
        https://webpki.lacunasoftware.com/#/Documentation
    *@

    <script type="text/javascript" src="https://get.webpkiplugin.com/Scripts/LacunaWebPKI/lacuna-web-pki-2.12.0.min.js" crossorigin="anonymous"></script>
    <script src="https://rawgit.com/emn178/js-sha256/master/build/sha256.min.js"></script>

    <script>

        // Get an instance of the LacunaWebPKI object. If a license was set on Web.config, the _Layout.cshtml master
        // view will have placed it on the global variable _webPkiLicense, which we pass to the class constructor.
        var pki = new LacunaWebPKI(_webPkiLicense);

        var allCerts = [];
        var hashSignature = "";
        var certsData;

        function start() {
            var nowStr = new Date().toISOString();
            $('#signData').val(nowStr);
            $('#signHash').val(nowStr);
            $('#readCertButton').click(readCert);
            log('Initializing component ...');
            pki.init(onWebPkiReady);
        }

        function formatCertificate(cert) {
            if (!cert.id) {
                return cert.text;
            }
            var $certificate;
            if (cert.disabled) {
                $certificate = $('<span>' + cert.text + ' <font style="color:red;">' + cert.error + '</font></span>');
            } else {
                $certificate = $('<span><font style="font-weight: bold;">' + cert.text + '</font></span>');
            }
            return $certificate;
        };

        function onWebPkiReady() {
            log('Component ready, listing certificates ...');
            pki.listCertificates().success(function (certs) {
                log(certs.length + ' certificates found.');
                allCerts = $.map(certs,
                    function (obj) {
                        obj.id = obj.thumbprint;
                        var now = new Date();
                        if (!obj.pkiBrazil.cpf) {
                            obj.disabled = true;
                            obj.text = obj.subjectName;
                            obj.error = 'certificate is not PKI Brasil';
                        } else if (now > obj.validityEnd) {
                            obj.disabled = true;
                            obj.error = 'Expired ' + obj.validityEnd.toISOString().split('T')[0];
                            obj.text = obj.subjectName;
                        } else {
                            obj.disabled = false;
                            obj.text = obj.subjectName + ' (issued by ' + obj.issuerName + ')';
                        }
                        return obj;
                    });
                allCerts.sort(function (a, b) { return a.disabled - b.disabled });
                $('.js-example-basic-single').select2({
                    data: allCerts,
                    templateResult: formatCertificate
                });
                document.getElementById("loader").style.display = "none";
                document.getElementById("loader2").style.display = "none";
                document.getElementById("select2Main").style.display = "block";
            });
        }

        function readCert() {
            var selectedCertThumb = $('#certificateSelect').val();
            clearCertInfo();
            $.each(allCerts,
                function () {
                    if (selectedCertThumb === this.thumbprint) {
                        logCertInfo('Thumbprint: ' + this.thumbprint);
                        logCertInfo('Subject Name: ' + this.subjectName);
                        logCertInfo('Issued Name: ' + this.issuerName);
                        logCertInfo('Validity Start: ' + this.validityStart);
                        logCertInfo('Validity End: ' + this.validityEnd);
                        if (this.pkiBrazil.certificateType !== "Unknown") {
                            logCertInfo('Certificate Type: ' + this.pkiBrazil.certificateType);
                            logCertInfo('CPF: ' + this.pkiBrazil.cpf);
                            logCertInfo('Date Of Birth: ' + this.pkiBrazil.dateOfBirth);
                            logCertInfo('Responsável: ' + this.pkiBrazil.responsavel);
                            if (this.pkiBrazil.isPessoaJuridica === true) {
                                logCertInfo('CNPJ: ' + this.pkiBrazil.cnpj);
                            }
                        }
                        logCertInfo('Key Usage: ');
                        logCertInfo('&nbsp&nbsp;&nbsp&nbsp;CRL Sign: ' + this.keyUsage.crlSign);
                        logCertInfo('&nbsp&nbsp;&nbsp&nbsp;Data Encipherment: ' + this.keyUsage.dataEncipherment);
                        logCertInfo('&nbsp&nbsp;&nbsp&nbsp;Digital Signature: ' + this.keyUsage.digitalSignature);
                        logCertInfo('&nbsp&nbsp;&nbsp&nbsp;Key Encipherment: ' + this.keyUsage.keyEncipherment);
                        logCertInfo('&nbsp&nbsp;&nbsp&nbsp;Non Repudiation: ' + this.keyUsage.nonRepudiation);
                    }
                }
            );
        }

        function log(message) {
            //$('#logPanel').append('<p>' + message + '</p>');
            if (window.console) {
                window.console.log(message);
            }
        }

        function logCertInfo(message) {
            $('#certInfoPanel').append(message + '<br/>');
        }

        function clearCertInfo() {
            $('#certInfoPanel').empty();
            $('#certInfoPanel').append('<h3>Certificate Information</h3>');
        }

        $(start);
    </script>
}
