@model SampleSite.Models.SignatureStartModel

@{
    ViewBag.Title = "PDF signature using iText";
}

<h2>PDF signature using iText</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "signForm", role = "form" })) {
    @Html.ValidationSummary("", new { @class = "text-danger" })

    @* Hidden fields used to pass data from the action to the "signature form" javascript (see below) and vice-versa *@
    @Html.HiddenFor(m => m.CertThumbBase64, new { id = "certThumb" })
    @Html.HiddenFor(m => m.CertContentBase64, new { id = "certContent" })

    <div class="form-group">
        <label>File to sign</label>
        <p>You'll be signing <a href='/Download/Sample'>this sample document</a>.</p>
    </div>

    <div class="form-group">
        <label for="certificateSelect">Choose a certificate</label>
        <select id="certificateSelect" class="form-control"></select>
    </div>

    <button id="signButton" type="button" class="btn btn-primary">Sign File</button>
    <button id="refreshButton" type="button" class="btn btn-default">Refresh Certificates</button>
}

@section Scripts {
    <script type="text/javascript" src="https://get.webpkiplugin.com/Scripts/LacunaWebPKI/lacuna-web-pki-2.5.0.js"></script>
    <script type="text/javascript" src="~/Content/js/app/signature-start-form.js"></script>
    <script>
		$(document).ready(function () {
			signatureStartForm.init({
				form: $('#signForm'),
				certificateSelect: $('#certificateSelect'),
				signButton: $('#signButton'),
				refreshButton: $('#refreshButton'),
				certThumbField: $('#certThumb'),
				certContentField: $('#certContent')
			})
		});
    </script>
}
