@model SampleSite.Models.SignatureCompleteModel

@{
    ViewBag.Title = "PDF signature using iText";
}

<h2>PDF signature using iText</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "signForm", role = "form" })) {
    @Html.ValidationSummary("", new { @class = "text-danger" })

    @* Hidden fields used to pass data from the action to the "signature form" javascript (see below) and vice-versa *@
    @Html.HiddenFor(m => m.CertThumbBase64, new { id = "certThumb" })
    @Html.HiddenFor(m => m.CertContentBase64, new { id = "certContent" })
    @Html.HiddenFor(m => m.ToSignHashBase64, new { id = "toSignHash" })
    @Html.HiddenFor(m => m.SignatureBase64, new { id = "signature" })
    @Html.HiddenFor(m => m.DigestAlgorithm, new { id = "digestAlgorithm" })

    @Html.ActionLink("Try Again", "Index", null, new { id = "tryAgainButton", @class = "btn btn-default", style = "display: none;" })
}

@section Scripts {
    <script type="text/javascript" src="https://get.webpkiplugin.com/Scripts/LacunaWebPKI/lacuna-web-pki-2.5.0.js"></script>
    <script type="text/javascript" src="~/Content/js/app/signature-complete-form.js"></script>
    <script>
		var formIsValid = @Html.Raw(Json.Encode(ViewData.ModelState.IsValid));
		$(document).ready(function () {
			signatureCompleteForm.init({
				form: $('#signForm'),
				certThumbField: $('#certThumb'),
                toSignHashField: $('#toSignHash'),
				digestAlgorithmField: $('#digestAlgorithm'),
				signatureField: $('#signature'),
				tryAgainButton: $('#tryAgainButton'),
				formIsValid: formIsValid
			})
		});
    </script>
}

